apiVersion: v1
kind: Namespace
metadata:
  name: customer-app
  labels:
    name: custpg
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: customer-app-pvc
  namespace: customer-app
  labels:
    name: custpg
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: vks-storage-policy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-record
  namespace: customer-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custpg
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: custpg
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: banking_db
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: admin
        - name: PGDATA
          value: /var/lib/postgresql/data/db
        image: harborsupervisor.corp.internal/customer-app/tools:pgdb
        imagePullPolicy: Always
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 999
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
      - env:
        - name: DB_HOST
          value: localhost
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: banking_db
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          value: admin
        image:  harborsupervisor.corp.internal/customer-app/tools:custpg
        imagePullPolicy: Always
        name: customer-service
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: customer-app-pvc
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: customer-app-svc
  namespace: customer-app
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: custpg
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: customerapp-selfsigned-issuer
  namespace: customer-app
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: customerapp-selfsigned-cert
  namespace: customer-app
spec:
  isCA: true
  commonName: customerapp.cloudapps.corp.internal
  secretName: customerapp-cert-tls
  dnsNames:
    - customerapp.cloudapps.corp.internal
  duration: 8760h
  renewBefore: 240h
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: customerapp-selfsigned-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customerapp-ingress
  namespace: customer-app
spec:
  ingressClassName: avi-lb
  tls:
  - hosts:
      - customerapp.cloudapps.corp.internal
    secretName: customerapp-cert-tls
  rules:
    - host: customerapp.cloudapps.corp.internal
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: customer-app-svc
              port:
                number: 8080
